{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apinrise/Code/ryanbuckleyca/louwer/front-end-2/components/Posts.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, createRef } from 'react';\nimport Post from 'Post';\n\nconst Posts = ({\n  children,\n  map,\n  refs,\n  setRefs,\n  dimensions\n}) => {\n  useEffect(() => {\n    const refList = children.reduce((acc, post) => {\n      acc[post.id] = /*#__PURE__*/createRef();\n      return acc;\n    }, {});\n    setRefs(_objectSpread({}, refList));\n  }, [children]);\n  if (!children || !refs) return /*#__PURE__*/_jsxDEV(\"em\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 33\n  }, this);\n  const posts = children.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n    id: post.id,\n    ref: refs[post.id],\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(Post, {\n      dimensions: dimensions,\n      data: post,\n      map: map\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, post.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"z-0 bg-beige\",\n    children: posts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/apinrise/Code/ryanbuckleyca/louwer/front-end-2/components/Posts.js"],"names":["React","useEffect","createRef","Post","Posts","children","map","refs","setRefs","dimensions","refList","reduce","acc","post","id","posts"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,GAAZ;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA,OAAvB;AAAgCC,EAAAA;AAAhC,CAAD,KAAkD;AAE9DR,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMS,OAAO,GAAGL,QAAQ,CAACM,MAAT,CAAgB,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC7CD,MAAAA,GAAG,CAACC,IAAI,CAACC,EAAN,CAAH,gBAAeZ,SAAS,EAAxB;AACA,aAAOU,GAAP;AACD,KAHe,EAGb,EAHa,CAAhB;AAIAJ,IAAAA,OAAO,mBAAKE,OAAL,EAAP;AACD,GANQ,EAMN,CAACL,QAAD,CANM,CAAT;AAQA,MAAG,CAACA,QAAD,IAAa,CAACE,IAAjB,EAAuB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEvB,QAAMQ,KAAK,GAAGV,QAAQ,CAACC,GAAT,CAAaO,IAAI,iBAC7B;AAAK,IAAA,EAAE,EAAEA,IAAI,CAACC,EAAd;AAAkB,IAAA,GAAG,EAAEP,IAAI,CAACM,IAAI,CAACC,EAAN,CAA3B;AAAoD,IAAA,SAAS,EAAC,MAA9D;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAEL,UAAlB;AAA8B,MAAA,IAAI,EAAEI,IAApC;AAA0C,MAAA,GAAG,EAAEP;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF,KAA2CO,IAAI,CAACC,EAAhD;AAAA;AAAA;AAAA;AAAA,UADY,CAAd;AAMA,sBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cACIC;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;AAyBA,eAAeX,KAAf","sourcesContent":["import React, { useEffect, createRef } from 'react'\nimport Post from 'Post'\n\nconst Posts = ({ children, map, refs, setRefs, dimensions }) => {\n  \n  useEffect(()=> {\n    const refList = children.reduce((acc, post) => {\n      acc[post.id] = createRef()\n      return acc\n    }, {})  \n    setRefs({...refList}) \n  }, [children])\n\n  if(!children || !refs) return <em>Loading...</em>\n\n  const posts = children.map(post => (\n    <div id={post.id} ref={refs[post.id]} key={post.id} className=\"mb-4\">\n      <Post dimensions={dimensions} data={post} map={map} />\n    </div>\n  ))\n\n  return (\n    <main className=\"z-0 bg-beige\">\n      { posts }\n    </main>\n  )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}