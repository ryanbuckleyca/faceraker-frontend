{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/components/Posts.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, createRef } from 'react';\nimport Post from 'components/Post/';\n\nconst Posts = ({\n  children,\n  setMapSettings,\n  mapSettings,\n  refs,\n  setRefs\n}) => {\n  useEffect(() => {\n    const refList = children.reduce((acc, post) => {\n      acc[post.id] = /*#__PURE__*/createRef();\n      return acc;\n    }, {});\n    setRefs(_objectSpread({}, refList));\n  }, [children]);\n  console.log('children in Posts.js is: ', children);\n  if (!children || children.length <= 1 || !refs) return /*#__PURE__*/_jsxDEV(\"em\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 57\n  }, this);\n  const posts = children.map(post => console.log('post is: ', post));\n  return posts; //   (\n  //   <div id={post.id} ref={refs[post.id]} key={post.id} className=\"mb-4\">\n  //     <Post data={post} mapSettings={mapSettings} setMapSettings={setMapSettings} />\n  //   </div>\n  // )\n  // )\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"z-0 bg-beige\",\n    children: posts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/components/Posts.js"],"names":["React","useEffect","createRef","Post","Posts","children","setMapSettings","mapSettings","refs","setRefs","refList","reduce","acc","post","id","console","log","length","posts","map"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,cAAZ;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA,IAAzC;AAA+CC,EAAAA;AAA/C,CAAD,KAA8D;AAE1ER,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMS,OAAO,GAAGL,QAAQ,CAACM,MAAT,CAAgB,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC7CD,MAAAA,GAAG,CAACC,IAAI,CAACC,EAAN,CAAH,gBAAeZ,SAAS,EAAxB;AACA,aAAOU,GAAP;AACD,KAHe,EAGb,EAHa,CAAhB;AAIAH,IAAAA,OAAO,mBAAKC,OAAL,EAAP;AACD,GANQ,EAMN,CAACL,QAAD,CANM,CAAT;AAQAU,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCX,QAAzC;AACA,MAAG,CAACA,QAAD,IAAaA,QAAQ,CAACY,MAAT,IAAmB,CAAhC,IAAqC,CAACT,IAAzC,EAA+C,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAE/C,QAAMU,KAAK,GAAGb,QAAQ,CAACc,GAAT,CAAaN,IAAI,IAAIE,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,IAAzB,CAArB,CAAd;AACA,SAAOK,KAAP,CAd0E,CAe1E;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cACIA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BD;;AA6BA,eAAed,KAAf","sourcesContent":["import React, { useEffect, createRef } from 'react'\nimport Post from 'components/Post/'\n\nconst Posts = ({ children, setMapSettings, mapSettings, refs, setRefs }) => {\n  \n  useEffect(()=> {\n    const refList = children.reduce((acc, post) => {\n      acc[post.id] = createRef()\n      return acc\n    }, {})  \n    setRefs({...refList}) \n  }, [children])\n\n  console.log('children in Posts.js is: ', children)\n  if(!children || children.length <= 1 || !refs) return <em>Loading...</em>\n\n  const posts = children.map(post => console.log('post is: ', post))\n  return posts\n  //   (\n  //   <div id={post.id} ref={refs[post.id]} key={post.id} className=\"mb-4\">\n  //     <Post data={post} mapSettings={mapSettings} setMapSettings={setMapSettings} />\n  //   </div>\n  // )\n  // )\n\n  return (\n    <main className=\"z-0 bg-beige\">\n      { posts }\n    </main>\n  )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}