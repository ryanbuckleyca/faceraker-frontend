{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { errors } from './errorHandler';\nvar baseURL = \"http://louwer-api.herokuapp.com/graphql?\";\nexport var callAPI = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(q) {\n    var options, res, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = {\n              method: 'POST',\n              headers: {\n                'content-type': 'application/json'\n              }\n            };\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(\"\".concat(baseURL).concat(q), options);\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            json = _context.sent;\n            console.log(json);\n            return _context.abrupt(\"return\", json);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", errors(\"error connecting to graphql: \", _context.t0));\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n\n  return function callAPI(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/utils/callAPI.js"],"names":["errors","baseURL","callAPI","q","options","method","headers","fetch","res","json","console","log"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,gBAAvB;AAEA,IAAMC,OAAO,GAAG,0CAAhB;AAEA,OAAO,IAAMC,OAAO;AAAA,sEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,OADe,GACL;AACdC,cAAAA,MAAM,EAAE,MADM;AAEdC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB;AAFK,aADK;AAAA;AAAA;AAAA,mBAMDC,KAAK,WAAIN,OAAJ,SAAcE,CAAd,GAAmBC,OAAnB,CANJ;;AAAA;AAMbI,YAAAA,GANa;AAAA;AAAA,mBAOAA,GAAG,CAACC,IAAJ,EAPA;;AAAA;AAObA,YAAAA,IAPa;AAQnBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AARmB,6CASZA,IATY;;AAAA;AAAA;AAAA;AAAA,6CAYZT,MAAM,CAAC,+BAAD,cAZM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPE,OAAO;AAAA;AAAA;AAAA,GAAb","sourcesContent":["import { errors } from './errorHandler'\n\nconst baseURL = \"http://louwer-api.herokuapp.com/graphql?\"\n\nexport const callAPI = async (q) => {\n  const options = {\n    method: 'POST',\n    headers: { 'content-type': 'application/json'}\n  }\n  try {\n    const res = await fetch(`${baseURL}${q}`, options)\n    const json = await res.json()\n    console.log(json)\n    return json\n  }\n  catch (err) {\n    return errors(\"error connecting to graphql: \", err)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}