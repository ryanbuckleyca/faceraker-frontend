{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/components/Mapbox/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useContext } from 'react';\nimport { markerClass } from './markers';\nimport { getCoords } from './coords';\nimport PopUpCard from './PopUpCard';\nimport MapContext from './MapContext';\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nconst Map = ReactMapboxGl({\n  accessToken: process.env.NEXT_PUBLIC_MAPBOX\n});\n\nconst Mapbox = ({\n  refs,\n  children\n}) => {\n  if (!children || children.length <= 1) return false;\n  const {\n    0: mapSettings\n  } = useContext(MapContext);\n\n  const expandMarker = post => {\n    setShowPopup(post.id); // @TODO: set context instead of former state\n\n    setMapSettings(_objectSpread(_objectSpread({}, mapSettings), {}, {\n      zoom: [10],\n      center: [post.longitude, post.latitude]\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Map, {\n    style: \"mapbox://styles/mapbox/streets-v11\",\n    center: mapSettings.center,\n    zoom: mapSettings.zoom,\n    containerStyle: {\n      height: '100%',\n      width: '100%'\n    },\n    children: children.map(post => /*#__PURE__*/_jsxDEV(MarkerAndPopup, {\n      post: post,\n      refs: refs\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}; // @TODO: getCoords re-renders on every state change\n// which moves the markers randomly, as getCoords should\n// better to set random coords when fetching or initially saving data\n\n\nconst MarkerAndPopup = ({\n  post,\n  refs\n}) => {\n  const {\n    0: mapSettings,\n    1: setMapSettings\n  } = useContext(MapContext);\n  const {\n    0: showPopup,\n    1: setShowPopup\n  } = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showPopup === post.id && /*#__PURE__*/_jsxDEV(PopUpCard, {\n      post: post,\n      refs: refs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      coordinates: [getCoords(post).lng, getCoords(post).lat],\n      anchor: \"bottom\",\n      onClick: () => expandMarker(post),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: markerClass(post)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Mapbox;","map":{"version":3,"sources":["/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/components/Mapbox/index.js"],"names":["useState","useContext","markerClass","getCoords","PopUpCard","MapContext","ReactMapboxGl","Marker","Map","accessToken","process","env","NEXT_PUBLIC_MAPBOX","Mapbox","refs","children","length","mapSettings","expandMarker","post","setShowPopup","id","setMapSettings","zoom","center","longitude","latitude","height","width","map","MarkerAndPopup","showPopup","lng","lat"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAOC,aAAP,IAAwBC,MAAxB,QAAsC,iBAAtC;AACA,OAAO,8BAAP;AAEA,MAAMC,GAAG,GAAGF,aAAa,CAAC;AACxBG,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADD,CAAD,CAAzB;;AAIA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AACrC,MAAI,CAACA,QAAD,IAAaA,QAAQ,CAACC,MAAT,IAAmB,CAApC,EAAuC,OAAO,KAAP;AAEvC,QAAM;AAAA,OAACC;AAAD,MAAgBhB,UAAU,CAACI,UAAD,CAAhC;;AAEA,QAAMa,YAAY,GAAIC,IAAD,IAAU;AAC7BC,IAAAA,YAAY,CAACD,IAAI,CAACE,EAAN,CAAZ,CAD6B,CAE7B;;AACAC,IAAAA,cAAc,iCACTL,WADS;AAEZM,MAAAA,IAAI,EAAE,CAAC,EAAD,CAFM;AAGZC,MAAAA,MAAM,EAAE,CAACL,IAAI,CAACM,SAAN,EAAiBN,IAAI,CAACO,QAAtB;AAHI,OAAd;AAKD,GARD;;AAUA,sBACE,QAAC,GAAD;AACE,IAAA,KAAK,EAAC,oCADR;AAEE,IAAA,MAAM,EAAET,WAAW,CAACO,MAFtB;AAGE,IAAA,IAAI,EAAEP,WAAW,CAACM,IAHpB;AAIE,IAAA,cAAc,EAAE;AACdI,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,KAAK,EAAE;AAFO,KAJlB;AAAA,cASGb,QAAQ,CAACc,GAAT,CAAcV,IAAD,iBACZ,QAAC,cAAD;AAA8B,MAAA,IAAI,EAAEA,IAApC;AAA0C,MAAA,IAAI,EAAEL;AAAhD,OAAqBK,IAAI,CAACE,EAA1B;AAAA;AAAA;AAAA;AAAA,YADD;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9BD,C,CAgCA;AACA;AACA;;;AACA,MAAMS,cAAc,GAAG,CAAC;AAAEX,EAAAA,IAAF;AAAQL,EAAAA;AAAR,CAAD,KAAoB;AACzC,QAAM;AAAA,OAACG,WAAD;AAAA,OAAcK;AAAd,MAAgCrB,UAAU,CAACI,UAAD,CAAhD;AACA,QAAM;AAAA,OAAC0B,SAAD;AAAA,OAAYX;AAAZ,MAA4BpB,QAAQ,EAA1C;AAEA,sBACE;AAAA,eACG+B,SAAS,KAAKZ,IAAI,CAACE,EAAnB,iBAAyB,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEF,IAAjB;AAAuB,MAAA,IAAI,EAAEL;AAA7B;AAAA;AAAA;AAAA;AAAA,YAD5B,eAEE,QAAC,MAAD;AAEE,MAAA,WAAW,EAAE,CAACX,SAAS,CAACgB,IAAD,CAAT,CAAgBa,GAAjB,EAAsB7B,SAAS,CAACgB,IAAD,CAAT,CAAgBc,GAAtC,CAFf;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,OAAO,EAAE,MAAMf,YAAY,CAACC,IAAD,CAJ7B;AAAA,6BAME;AAAK,QAAA,SAAS,EAAEjB,WAAW,CAACiB,IAAD;AAA3B;AAAA;AAAA;AAAA;AAAA;AANF,OACOA,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAaD,CAjBD;;AAmBA,eAAeR,MAAf","sourcesContent":["import { useState, useContext } from 'react'\nimport { markerClass } from './markers'\nimport { getCoords } from './coords'\nimport PopUpCard from './PopUpCard'\nimport MapContext from './MapContext'\n\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst Map = ReactMapboxGl({\n  accessToken: process.env.NEXT_PUBLIC_MAPBOX\n})\n\nconst Mapbox = ({ refs, children }) => {\n  if (!children || children.length <= 1) return false\n\n  const [mapSettings] = useContext(MapContext)\n\n  const expandMarker = (post) => {\n    setShowPopup(post.id)\n    // @TODO: set context instead of former state\n    setMapSettings({ \n      ...mapSettings,\n      zoom: [10],\n      center: [post.longitude, post.latitude] \n    })\n  }\n\n  return (\n    <Map\n      style=\"mapbox://styles/mapbox/streets-v11\"\n      center={mapSettings.center}\n      zoom={mapSettings.zoom}\n      containerStyle={{\n        height: '100%',\n        width: '100%'\n      }}\n    >\n      {children.map((post) => \n        <MarkerAndPopup key={post.id} post={post} refs={refs} />\n      )}\n    </Map>\n  )\n}\n\n// @TODO: getCoords re-renders on every state change\n// which moves the markers randomly, as getCoords should\n// better to set random coords when fetching or initially saving data\nconst MarkerAndPopup = ({ post, refs }) => {\n  const [mapSettings, setMapSettings] = useContext(MapContext)\n  const [showPopup, setShowPopup] = useState()\n\n  return (\n    <>\n      {showPopup === post.id && <PopUpCard post={post} refs={refs} />}\n      <Marker\n        key={post.id}\n        coordinates={[getCoords(post).lng, getCoords(post).lat]}\n        anchor=\"bottom\"\n        onClick={() => expandMarker(post)}\n      >\n        <div className={markerClass(post)}></div>\n      </Marker>\n    </>\n  )\n}\n\nexport default Mapbox\n"]},"metadata":{},"sourceType":"module"}