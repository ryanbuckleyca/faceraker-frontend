{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/components/Mapbox/index.js\";\nimport { useState } from 'react';\nimport { markerClass } from './markers';\nimport { getCoords } from './coords';\nimport PopUpCard from './PopUpCard';\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nconst Map = ReactMapboxGl({\n  accessToken: process.env.NEXT_PUBLIC_MAPBOX\n});\n\nconst Mapbox = ({\n  refs,\n  children,\n  mapSettings,\n  setMapSettings\n}) => {\n  if (!children || children.length <= 1) return false;\n  const {\n    0: showPopup,\n    1: setShowPopup\n  } = useState();\n  return /*#__PURE__*/_jsxDEV(Map, {\n    style: \"mapbox://styles/mapbox/streets-v11\",\n    center: mapSettings.center,\n    zoom: mapSettings.zoom,\n    containerStyle: {\n      height: '100%',\n      width: '100%'\n    },\n    children: children.map(post => /*#__PURE__*/_jsxDEV(MarkerAndPopup, {\n      post: post,\n      refs: refs\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}; // @TODO: getCoords re-renders on every state change\n// which moves the markers randomly, as getCoords should\n// better to set random coords when fetching or initially saving data\n\n\nconst MarkerAndPopup = ({\n  post,\n  refs,\n  showPopup,\n  setShowPopup\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [console.log('show is: ', showPopup), showPopup === post.id && /*#__PURE__*/_jsxDEV(PopUpCard, {\n    post: post,\n    refs: refs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 31\n  }, this), /*#__PURE__*/_jsxDEV(Marker, {\n    coordinates: [getCoords(post).lng, getCoords(post).lat],\n    anchor: \"bottom\",\n    onClick: () => expandMarker(post),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: markerClass(post)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, post.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\nexport default Mapbox;","map":{"version":3,"sources":["/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/components/Mapbox/index.js"],"names":["useState","markerClass","getCoords","PopUpCard","ReactMapboxGl","Marker","Map","accessToken","process","env","NEXT_PUBLIC_MAPBOX","Mapbox","refs","children","mapSettings","setMapSettings","length","showPopup","setShowPopup","center","zoom","height","width","map","post","id","MarkerAndPopup","console","log","lng","lat","expandMarker"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,aAAP,IAAwBC,MAAxB,QAAsC,iBAAtC;AACA,OAAO,8BAAP;AAEA,MAAMC,GAAG,GAAGF,aAAa,CAAC;AACxBG,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADD,CAAD,CAAzB;;AAIA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,WAAlB;AAA+BC,EAAAA;AAA/B,CAAD,KAAqD;AAClE,MAAI,CAACF,QAAD,IAAaA,QAAQ,CAACG,MAAT,IAAmB,CAApC,EAAuC,OAAO,KAAP;AAEvC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BlB,QAAQ,EAA1C;AAEA,sBACE,QAAC,GAAD;AACE,IAAA,KAAK,EAAC,oCADR;AAEE,IAAA,MAAM,EAAEc,WAAW,CAACK,MAFtB;AAGE,IAAA,IAAI,EAAEL,WAAW,CAACM,IAHpB;AAIE,IAAA,cAAc,EAAE;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,KAAK,EAAE;AAFO,KAJlB;AAAA,cASGT,QAAQ,CAACU,GAAT,CAAcC,IAAD,iBACZ,QAAC,cAAD;AAA8B,MAAA,IAAI,EAAEA,IAApC;AAA0C,MAAA,IAAI,EAAEZ;AAAhD,OAAqBY,IAAI,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,YADD;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApBD,C,CAsBA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEF,EAAAA,IAAF;AAAQZ,EAAAA,IAAR;AAAcK,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAAD,kBACrB;AAAA,aACGS,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBX,SAAzB,CADH,EAEGA,SAAS,KAAKO,IAAI,CAACC,EAAnB,iBAAyB,QAAC,SAAD;AAAW,IAAA,IAAI,EAAED,IAAjB;AAAuB,IAAA,IAAI,EAAEZ;AAA7B;AAAA;AAAA;AAAA;AAAA,UAF5B,eAGE,QAAC,MAAD;AAEE,IAAA,WAAW,EAAE,CAACV,SAAS,CAACsB,IAAD,CAAT,CAAgBK,GAAjB,EAAsB3B,SAAS,CAACsB,IAAD,CAAT,CAAgBM,GAAtC,CAFf;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,OAAO,EAAE,MAAMC,YAAY,CAACP,IAAD,CAJ7B;AAAA,2BAME;AAAK,MAAA,SAAS,EAAEvB,WAAW,CAACuB,IAAD;AAA3B;AAAA;AAAA;AAAA;AAAA;AANF,KACOA,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA,gBADF;;AAeA,eAAed,MAAf","sourcesContent":["import { useState } from 'react'\nimport { markerClass } from './markers'\nimport { getCoords } from './coords'\nimport PopUpCard from './PopUpCard'\n\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst Map = ReactMapboxGl({\n  accessToken: process.env.NEXT_PUBLIC_MAPBOX\n})\n\nconst Mapbox = ({ refs, children, mapSettings, setMapSettings }) => {\n  if (!children || children.length <= 1) return false\n\n  const [showPopup, setShowPopup] = useState()\n\n  return (\n    <Map\n      style=\"mapbox://styles/mapbox/streets-v11\"\n      center={mapSettings.center}\n      zoom={mapSettings.zoom}\n      containerStyle={{\n        height: '100%',\n        width: '100%'\n      }}\n    >\n      {children.map((post) => \n        <MarkerAndPopup key={post.id} post={post} refs={refs} />\n      )}\n    </Map>\n  )\n}\n\n// @TODO: getCoords re-renders on every state change\n// which moves the markers randomly, as getCoords should\n// better to set random coords when fetching or initially saving data\nconst MarkerAndPopup = ({ post, refs, showPopup, setShowPopup }) => (\n  <>\n    {console.log('show is: ', showPopup)}\n    {showPopup === post.id && <PopUpCard post={post} refs={refs} />}\n    <Marker\n      key={post.id}\n      coordinates={[getCoords(post).lng, getCoords(post).lat]}\n      anchor=\"bottom\"\n      onClick={() => expandMarker(post)}\n    >\n      <div className={markerClass(post)}></div>\n    </Marker>\n  </>\n)\n\nexport default Mapbox\n"]},"metadata":{},"sourceType":"module"}