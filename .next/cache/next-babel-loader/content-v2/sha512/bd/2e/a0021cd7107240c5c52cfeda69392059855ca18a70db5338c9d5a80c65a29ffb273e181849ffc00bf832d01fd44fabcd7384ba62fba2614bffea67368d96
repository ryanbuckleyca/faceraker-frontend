{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, createRef } from 'react';\nimport Post from 'components/Post/';\n\nconst Posts = ({\n  children,\n  refs,\n  setRefs,\n  setShowPopup\n}) => {\n  useEffect(() => {\n    const refList = children.reduce((acc, post) => {\n      acc[post.id] = /*#__PURE__*/createRef();\n      return acc;\n    }, {});\n    setRefs(_objectSpread({}, refList));\n  }, [children]);\n  if (!children || children.length <= 1 || !refs) return /*#__PURE__*/_jsx(\"em\", {\n    children: \"Loading...\"\n  });\n  return /*#__PURE__*/_jsx(\"main\", {\n    className: \"z-0 bg-beige\",\n    children: children.map(post => /*#__PURE__*/_jsx(\"div\", {\n      ref: refs[post.id],\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsx(Post, {\n        data: post,\n        setShowPopup: setShowPopup\n      })\n    }, post.id))\n  });\n};\n\nexport default Posts;","map":null,"metadata":{},"sourceType":"module"}