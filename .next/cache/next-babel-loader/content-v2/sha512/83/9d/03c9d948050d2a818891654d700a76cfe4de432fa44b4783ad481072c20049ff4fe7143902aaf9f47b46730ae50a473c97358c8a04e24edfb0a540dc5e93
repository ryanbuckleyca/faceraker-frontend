{"ast":null,"code":"const gravesiteCoords = () => {\n  let r = 0.00396;\n  let n = Math.random() < .5 ? -1 : 1;\n  let x = r * Math.random() * n;\n  let spots = [[-73.609270 + x, 45.499805 + x], [-73.605279 + x, 45.503174 + x], [-73.597597 + x, 45.504768 + x], [-73.598026 + x, 45.508106 + x]];\n  let spot = Math.floor(Math.random() * spots.length);\n  return {\n    lng: spots[spot][0],\n    lat: spots[spot][1]\n  };\n};\n\nexport const getCoords = post => post.location === 'Montréal, Québec' ? gravesiteCoords() : {\n  lng: post.longitude,\n  lat: post.latitude\n};","map":{"version":3,"sources":["/Users/apinrise/Code/ryanbuckleyca/louwer/front-end-2/components/Mapbox/coords.js"],"names":["gravesiteCoords","r","n","Math","random","x","spots","spot","floor","length","lng","lat","getCoords","post","location","longitude","latitude"],"mappings":"AAAA,MAAMA,eAAe,GAAG,MAAM;AAC5B,MAAIC,CAAC,GAAG,OAAR;AACA,MAAIC,CAAC,GAAGC,IAAI,CAACC,MAAL,KAAc,EAAd,GAAmB,CAAC,CAApB,GAAwB,CAAhC;AACA,MAAIC,CAAC,GAAGJ,CAAC,GAAGE,IAAI,CAACC,MAAL,EAAJ,GAAoBF,CAA5B;AACA,MAAII,KAAK,GAAG,CACV,CAAC,CAAC,SAAD,GAAWD,CAAZ,EAAe,YAAUA,CAAzB,CADU,EAEV,CAAC,CAAC,SAAD,GAAWA,CAAZ,EAAe,YAAUA,CAAzB,CAFU,EAGV,CAAC,CAAC,SAAD,GAAWA,CAAZ,EAAe,YAAUA,CAAzB,CAHU,EAIV,CAAC,CAAC,SAAD,GAAWA,CAAZ,EAAe,YAAUA,CAAzB,CAJU,CAAZ;AAMA,MAAIE,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACC,MAAL,KAAcE,KAAK,CAACG,MAA/B,CAAX;AACA,SAAQ;AAAEC,IAAAA,GAAG,EAAEJ,KAAK,CAACC,IAAD,CAAL,CAAY,CAAZ,CAAP;AAAuBI,IAAAA,GAAG,EAAEL,KAAK,CAACC,IAAD,CAAL,CAAY,CAAZ;AAA5B,GAAR;AACD,CAZD;;AAcA,OAAO,MAAMK,SAAS,GAAIC,IAAD,IACvBA,IAAI,CAACC,QAAL,KAAkB,kBAAlB,GACEd,eAAe,EADjB,GAEE;AAAEU,EAAAA,GAAG,EAAEG,IAAI,CAACE,SAAZ;AAAuBJ,EAAAA,GAAG,EAAEE,IAAI,CAACG;AAAjC,CAHG","sourcesContent":["const gravesiteCoords = () => {\n  let r = 0.00396\n  let n = Math.random()<.5 ? -1 : 1\n  let x = r * Math.random() * n\n  let spots = [\n    [-73.609270+x, 45.499805+x],\n    [-73.605279+x, 45.503174+x],\n    [-73.597597+x, 45.504768+x],\n    [-73.598026+x, 45.508106+x]\n  ]\n  let spot = Math.floor(Math.random()*spots.length)\n  return ({ lng: spots[spot][0], lat: spots[spot][1] })\n}\n\nexport const getCoords = (post) => (\n  post.location === 'Montréal, Québec'\n  ? gravesiteCoords()\n  : { lng: post.longitude, lat: post.latitude }\n)"]},"metadata":{},"sourceType":"module"}