{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/components/Mapbox/index.js\";\nimport { useState, useContext } from 'react';\nimport { markerClass } from './markers';\nimport { getCoords } from './coords';\nimport PopUpCard from './PopUpCard';\nimport MapContext from './MapContext';\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nconst Map = ReactMapboxGl({\n  accessToken: process.env.NEXT_PUBLIC_MAPBOX\n});\n\nconst Mapbox = ({\n  refs,\n  children\n}) => {\n  if (!children || children.length <= 1) return false;\n  const {\n    0: mapSettings\n  } = useContext(MapContext);\n  return /*#__PURE__*/_jsxDEV(Map, {\n    style: \"mapbox://styles/mapbox/streets-v11\",\n    center: mapSettings.center,\n    zoom: mapSettings.zoom,\n    containerStyle: {\n      height: '100%',\n      width: '100%'\n    },\n    children: children.map(post => /*#__PURE__*/_jsxDEV(MarkerAndPopup, {\n      post: post,\n      refs: refs\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}; // @TODO: getCoords re-renders on every state change\n// which moves the markers randomly, as getCoords should\n// better to set random coords when fetching or initially saving data\n\n\nconst MarkerAndPopup = ({\n  post,\n  refs\n}) => {\n  const {\n    0: mapSettings,\n    1: setMapSettings\n  } = useContext(MapContext);\n  const {\n    0: showPopup,\n    1: setShowPopup\n  } = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showPopup === post.id && /*#__PURE__*/_jsxDEV(PopUpCard, {\n      post: post,\n      refs: refs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      coordinates: [getCoords(post).lng, getCoords(post).lat],\n      anchor: \"bottom\",\n      onClick: () => expandMarker(post),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: markerClass(post)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Mapbox;","map":{"version":3,"sources":["/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/components/Mapbox/index.js"],"names":["useState","useContext","markerClass","getCoords","PopUpCard","MapContext","ReactMapboxGl","Marker","Map","accessToken","process","env","NEXT_PUBLIC_MAPBOX","Mapbox","refs","children","length","mapSettings","center","zoom","height","width","map","post","id","MarkerAndPopup","setMapSettings","showPopup","setShowPopup","lng","lat","expandMarker"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAOC,aAAP,IAAwBC,MAAxB,QAAsC,iBAAtC;AACA,OAAO,8BAAP;AAEA,MAAMC,GAAG,GAAGF,aAAa,CAAC;AACxBG,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADD,CAAD,CAAzB;;AAIA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AACrC,MAAI,CAACA,QAAD,IAAaA,QAAQ,CAACC,MAAT,IAAmB,CAApC,EAAuC,OAAO,KAAP;AAEvC,QAAM;AAAA,OAACC;AAAD,MAAgBhB,UAAU,CAACI,UAAD,CAAhC;AAEA,sBACE,QAAC,GAAD;AACE,IAAA,KAAK,EAAC,oCADR;AAEE,IAAA,MAAM,EAAEY,WAAW,CAACC,MAFtB;AAGE,IAAA,IAAI,EAAED,WAAW,CAACE,IAHpB;AAIE,IAAA,cAAc,EAAE;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,KAAK,EAAE;AAFO,KAJlB;AAAA,cASGN,QAAQ,CAACO,GAAT,CAAcC,IAAD,iBACZ,QAAC,cAAD;AAA8B,MAAA,IAAI,EAAEA,IAApC;AAA0C,MAAA,IAAI,EAAET;AAAhD,OAAqBS,IAAI,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,YADD;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApBD,C,CAsBA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEF,EAAAA,IAAF;AAAQT,EAAAA;AAAR,CAAD,KAAoB;AACzC,QAAM;AAAA,OAACG,WAAD;AAAA,OAAcS;AAAd,MAAgCzB,UAAU,CAACI,UAAD,CAAhD;AACA,QAAM;AAAA,OAACsB,SAAD;AAAA,OAAYC;AAAZ,MAA4B5B,QAAQ,EAA1C;AAEA,sBACE;AAAA,eACG2B,SAAS,KAAKJ,IAAI,CAACC,EAAnB,iBAAyB,QAAC,SAAD;AAAW,MAAA,IAAI,EAAED,IAAjB;AAAuB,MAAA,IAAI,EAAET;AAA7B;AAAA;AAAA;AAAA;AAAA,YAD5B,eAEE,QAAC,MAAD;AAEE,MAAA,WAAW,EAAE,CAACX,SAAS,CAACoB,IAAD,CAAT,CAAgBM,GAAjB,EAAsB1B,SAAS,CAACoB,IAAD,CAAT,CAAgBO,GAAtC,CAFf;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,OAAO,EAAE,MAAMC,YAAY,CAACR,IAAD,CAJ7B;AAAA,6BAME;AAAK,QAAA,SAAS,EAAErB,WAAW,CAACqB,IAAD;AAA3B;AAAA;AAAA;AAAA;AAAA;AANF,OACOA,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAaD,CAjBD;;AAmBA,eAAeX,MAAf","sourcesContent":["import { useState, useContext } from 'react'\nimport { markerClass } from './markers'\nimport { getCoords } from './coords'\nimport PopUpCard from './PopUpCard'\nimport MapContext from './MapContext'\n\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst Map = ReactMapboxGl({\n  accessToken: process.env.NEXT_PUBLIC_MAPBOX\n})\n\nconst Mapbox = ({ refs, children }) => {\n  if (!children || children.length <= 1) return false\n\n  const [mapSettings] = useContext(MapContext)\n\n  return (\n    <Map\n      style=\"mapbox://styles/mapbox/streets-v11\"\n      center={mapSettings.center}\n      zoom={mapSettings.zoom}\n      containerStyle={{\n        height: '100%',\n        width: '100%'\n      }}\n    >\n      {children.map((post) => \n        <MarkerAndPopup key={post.id} post={post} refs={refs} />\n      )}\n    </Map>\n  )\n}\n\n// @TODO: getCoords re-renders on every state change\n// which moves the markers randomly, as getCoords should\n// better to set random coords when fetching or initially saving data\nconst MarkerAndPopup = ({ post, refs }) => {\n  const [mapSettings, setMapSettings] = useContext(MapContext)\n  const [showPopup, setShowPopup] = useState()\n\n  return (\n    <>\n      {showPopup === post.id && <PopUpCard post={post} refs={refs} />}\n      <Marker\n        key={post.id}\n        coordinates={[getCoords(post).lng, getCoords(post).lat]}\n        anchor=\"bottom\"\n        onClick={() => expandMarker(post)}\n      >\n        <div className={markerClass(post)}></div>\n      </Marker>\n    </>\n  )\n}\n\nexport default Mapbox\n"]},"metadata":{},"sourceType":"module"}