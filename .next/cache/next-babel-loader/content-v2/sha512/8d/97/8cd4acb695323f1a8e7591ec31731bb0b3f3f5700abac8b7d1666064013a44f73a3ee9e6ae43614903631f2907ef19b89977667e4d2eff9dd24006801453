{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nimport DisplayContext from 'components/DisplayContext';\nimport 'styles/globals.css';\n\nfunction Louwer({\n  Component,\n  pageProps\n}) {\n  const getWindow = () => {\n    const {\n      0: dimensions,\n      1: setDimensions\n    } = useState({});\n\n    const handleResize = () => {\n      const {\n        innerWidth: width,\n        innerHeight: height\n      } = window;\n      setDimensions({\n        width,\n        height\n      });\n    };\n\n    useEffect(() => {\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, [handleResize]);\n    return dimensions;\n  };\n\n  return /*#__PURE__*/_jsx(DisplayContext.Provider, {\n    value: getWindow(),\n    children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n  });\n}\n\nexport default Louwer;","map":null,"metadata":{},"sourceType":"module"}