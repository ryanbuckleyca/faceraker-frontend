{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/pages/index.js\";\nimport { useState, useEffect, useRef } from 'react';\nimport { callAPI } from 'utils/callAPI';\nimport Slogan from 'components/Slogan';\nimport Posts from 'components/Posts';\nimport Filters from 'components/Filters/';\nimport Mapbox from 'components/Mapbox/';\n\nfunction Home() {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: dimensions,\n    1: setDimensions\n  } = useState();\n  const {\n    0: refs,\n    1: setRefs\n  } = useState(null);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState();\n  const {\n    0: center,\n    1: setCenter\n  } = useState([-73.55335998535156, 45.509063720703125]);\n  const {\n    0: zoom,\n    1: setZoom\n  } = useState([10]);\n\n  const handleResize = () => {\n    const {\n      innerWidth: width,\n      innerHeight: height\n    } = window;\n    setDimensions({\n      width,\n      height\n    });\n  };\n\n  const map = useRef();\n  useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    const query = `query={ posts {\n      id, title, price, location, latitude, longitude,images, text, link, group { id, name } }\n    }`;\n    callAPI(query).then(res => res.data ? setPosts([...res.data.posts]) : setErrors(\"cannot connect to api\"));\n  }, []);\n  if (errors) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: errors\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 22\n  }, this);\n  if (posts.length < 1) return false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"slogan\",\n      className: \" w-full p-5 bg-red-600 z-10 sm:w-1/2 \",\n      children: /*#__PURE__*/_jsxDEV(Slogan, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sticky top-0 z-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mapbox\",\n        className: \" w-full h-64 top-20 sm:w-1/2 sm:h-screen sm:top-0 sm:right-0 sm:fixed \",\n        children: /*#__PURE__*/_jsxDEV(Mapbox, {\n          dimensions: dimensions,\n          refs: refs,\n          center: center,\n          zoom: zoom,\n          children: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filters\",\n        className: \" w-full bg-beige pt-2 z-10 sm:w-1/2 sm:top-0 \",\n        children: /*#__PURE__*/_jsxDEV(Filters, {\n          setPosts: setPosts,\n          children: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"posts\",\n      className: \" w-full px-3 bg-beige sm:w-1/2 \",\n      children: [console.log('posts are: ', posts), /*#__PURE__*/_jsxDEV(Posts, {\n        dimensions: dimensions,\n        refs: refs,\n        setRefs: setRefs,\n        center: center,\n        setCenter: setCenter,\n        zoom: zoom,\n        setZoom: setZoom,\n        children: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/pages/index.js"],"names":["useState","useEffect","useRef","callAPI","Slogan","Posts","Filters","Mapbox","Home","posts","setPosts","dimensions","setDimensions","refs","setRefs","errors","setErrors","center","setCenter","zoom","setZoom","handleResize","innerWidth","width","innerHeight","height","window","map","addEventListener","query","then","res","data","length","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { callAPI } from 'utils/callAPI'\nimport Slogan from 'components/Slogan'\nimport Posts from 'components/Posts'\nimport Filters from 'components/Filters/'\nimport Mapbox from 'components/Mapbox/'\n\nfunction Home() {\n  const [ posts, setPosts ] = useState([])\n  const [ dimensions, setDimensions ] = useState()\n  const [ refs, setRefs ] = useState(null)\n  const [ errors, setErrors ] = useState()\n  const [ center, setCenter ] = useState([-73.55335998535156, 45.509063720703125])\n  const [ zoom, setZoom ] = useState([10])\n\n  const handleResize = () => {\n    const { innerWidth: width, innerHeight: height } = window\n    setDimensions({ width, height })\n  }\n\n  const map = useRef()\n\n  useEffect(() => { \n    handleResize()\n    window.addEventListener('resize', handleResize)\n\n    const query = `query={ posts {\n      id, title, price, location, latitude, longitude,images, text, link, group { id, name } }\n    }`\n    callAPI(query).then(res => res.data\n      ? setPosts([...res.data.posts])\n      : setErrors(\"cannot connect to api\")\n    )\n  }, [])\n\n  if (errors) return <div>{errors}</div>\n  if (posts.length < 1) return false\n\n  return (\n    <div>\n      <div id=\"slogan\" className=\"\n        w-full p-5 bg-red-600 z-10\n        sm:w-1/2\n      \">\n        <Slogan />\n      </div>\n      <div className=\"sticky top-0 z-20\">\n        <div id=\"mapbox\" className=\"\n          w-full h-64 top-20\n          sm:w-1/2 sm:h-screen sm:top-0 sm:right-0 sm:fixed\n        \">\n          <Mapbox dimensions={dimensions} refs={refs} center={center} zoom={zoom}>\n            { posts }\n          </Mapbox>\n        </div>\n        <div id=\"filters\" className=\"\n          w-full bg-beige pt-2 z-10\n          sm:w-1/2 sm:top-0\n        \">\n          <Filters setPosts={setPosts}>\n            { posts }\n          </Filters>\n        </div>\n      </div>\n      <div id=\"posts\" className=\"\n        w-full px-3 bg-beige\n        sm:w-1/2\n      \">\n        {console.log('posts are: ', posts)}\n        <Posts dimensions={dimensions} refs={refs} setRefs={setRefs} center={center} setCenter={setCenter} zoom={zoom} setZoom={setZoom}>\n          { posts }\n        </Posts>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}