{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/components/Mapbox/index.js\";\n\n/* src/App.js */\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport { markerClass } from './markers';\nimport { getCoords } from './coords';\nimport { popupCard } from './pop-up';\nmapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX;\nconst mapObj = {\n  container: 'map',\n  style: 'mapbox://styles/mapbox/streets-v11',\n  center: [-73.55335998535156, 45.509063720703125],\n  zoom: 10\n};\nconst popUpSpecs = {\n  offset: 10,\n  focusAfterOpen: false\n};\n\nconst putMarkerOnMap = (dimensions, post, refs, map) => {\n  const placeholder = document.createElement('div');\n  ReactDOM.render(popupCard(dimensions, post, refs), placeholder);\n  const {\n    lng,\n    lat\n  } = getCoords(post);\n  const popup = new mapboxgl.Popup(popUpSpecs).setDOMContent(placeholder);\n  const coords = new mapboxgl.LngLat(lng, lat);\n  const el = document.createElement('div');\n  el.className = markerClass(post);\n  const marker = new mapboxgl.Marker(el).setLngLat(coords).setPopup(popup).addTo(map);\n  return marker;\n};\n\nfunction Mapbox({\n  dimensions,\n  map,\n  setMap,\n  refs,\n  children\n}) {\n  useEffect(() => {\n    const mapbox = new mapboxgl.Map(mapObj);\n    setMap(mapbox);\n  }, []);\n  useEffect(() => {\n    children.forEach(post => putMarkerOnMap(dimensions, post, refs, map));\n  }, [map, refs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    className: \"h-full\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Mapbox;","map":{"version":3,"sources":["/Users/apinrise/Code/ryanbuckleyca/louwer/frontend/components/Mapbox/index.js"],"names":["React","useEffect","ReactDOM","mapboxgl","markerClass","getCoords","popupCard","accessToken","process","env","NEXT_PUBLIC_MAPBOX","mapObj","container","style","center","zoom","popUpSpecs","offset","focusAfterOpen","putMarkerOnMap","dimensions","post","refs","map","placeholder","document","createElement","render","lng","lat","popup","Popup","setDOMContent","coords","LngLat","el","className","marker","Marker","setLngLat","setPopup","addTo","Mapbox","setMap","children","mapbox","Map","forEach"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEAH,QAAQ,CAACI,WAAT,GAAuBC,OAAO,CAACC,GAAR,CAAYC,kBAAnC;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE,KADE;AAEbC,EAAAA,KAAK,EAAE,oCAFM;AAGbC,EAAAA,MAAM,EAAE,CAAC,CAAC,iBAAF,EAAqB,kBAArB,CAHK;AAIbC,EAAAA,IAAI,EAAE;AAJO,CAAf;AAOA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,cAAc,EAAE;AAFC,CAAnB;;AAKA,MAAMC,cAAc,GAAG,CAACC,UAAD,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,KAAiC;AACtD,QAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAApB;AACAxB,EAAAA,QAAQ,CAACyB,MAAT,CAAgBrB,SAAS,CAACc,UAAD,EAAaC,IAAb,EAAmBC,IAAnB,CAAzB,EAAmDE,WAAnD;AACA,QAAM;AAAEI,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAexB,SAAS,CAACgB,IAAD,CAA9B;AACA,QAAMS,KAAK,GAAG,IAAI3B,QAAQ,CAAC4B,KAAb,CAAmBf,UAAnB,EAA+BgB,aAA/B,CAA6CR,WAA7C,CAAd;AACA,QAAMS,MAAM,GAAG,IAAI9B,QAAQ,CAAC+B,MAAb,CAAoBN,GAApB,EAAyBC,GAAzB,CAAf;AACA,QAAMM,EAAE,GAAGV,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AACAS,EAAAA,EAAE,CAACC,SAAH,GAAehC,WAAW,CAACiB,IAAD,CAA1B;AAEA,QAAMgB,MAAM,GAAG,IAAIlC,QAAQ,CAACmC,MAAb,CAAoBH,EAApB,EACZI,SADY,CACFN,MADE,EAEZO,QAFY,CAEHV,KAFG,EAGZW,KAHY,CAGNlB,GAHM,CAAf;AAKA,SAAOc,MAAP;AACD,CAfD;;AAiBA,SAASK,MAAT,CAAgB;AAAEtB,EAAAA,UAAF;AAAcG,EAAAA,GAAd;AAAmBoB,EAAAA,MAAnB;AAA2BrB,EAAAA,IAA3B;AAAiCsB,EAAAA;AAAjC,CAAhB,EAA6D;AAC3D3C,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4C,MAAM,GAAG,IAAI1C,QAAQ,CAAC2C,GAAb,CAAiBnC,MAAjB,CAAf;AACAgC,IAAAA,MAAM,CAACE,MAAD,CAAN;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA5C,EAAAA,SAAS,CAAC,MAAM;AACd2C,IAAAA,QAAQ,CAACG,OAAT,CAAiB1B,IAAI,IAAIF,cAAc,CAACC,UAAD,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,CAAvC;AACD,GAFQ,EAEN,CAACA,GAAD,EAAMD,IAAN,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;AAED,eAAeoB,MAAf","sourcesContent":["/* src/App.js */\nimport React, { useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport mapboxgl from 'mapbox-gl';\nimport { markerClass } from './markers'\nimport { getCoords } from './coords'\nimport { popupCard } from './pop-up'\n\nmapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX;\n\nconst mapObj = {\n  container: 'map',\n  style: 'mapbox://styles/mapbox/streets-v11',\n  center: [-73.55335998535156, 45.509063720703125],\n  zoom: 10\n}\n\nconst popUpSpecs = {\n  offset: 10,\n  focusAfterOpen: false\n}\n\nconst putMarkerOnMap = (dimensions, post, refs, map) => {\n  const placeholder = document.createElement('div')\n  ReactDOM.render(popupCard(dimensions, post, refs), placeholder)\n  const { lng, lat } = getCoords(post)\n  const popup = new mapboxgl.Popup(popUpSpecs).setDOMContent(placeholder);\n  const coords = new mapboxgl.LngLat(lng, lat)\n  const el = document.createElement('div')\n  el.className = markerClass(post)\n\n  const marker = new mapboxgl.Marker(el)\n    .setLngLat(coords)\n    .setPopup(popup)\n    .addTo(map)\n    \n  return marker\n}\n\nfunction Mapbox({ dimensions, map, setMap, refs, children }) { \n  useEffect(() => {\n    const mapbox = new mapboxgl.Map(mapObj)\n    setMap(mapbox)\n  }, [])\n\n  useEffect(() => {\n    children.forEach(post => putMarkerOnMap(dimensions, post, refs, map))\n  }, [map, refs])\n\n  return (\n    <div id='map' className='h-full'></div>\n  )\n}\n\nexport default Mapbox\n"]},"metadata":{},"sourceType":"module"}